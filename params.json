{"name":"slncky","tagline":"","body":"### Step 1: Download slncky and all dependencies\r\nDownload slncky from its [github] (https://github.com/jjennychen/slncky).\r\n\r\nslncky was developed using Python v2.7.1 and will not work with Python v3.  To check what version of python you have, type `python --version` into your terminal.\r\n\r\nslncky is depending on three easily downloadable softwares:\r\n* [bedtools v2.17.0 or greater](https://code.google.com/p/bedtools/downloads/list)\r\n* [liftOver] (http://hgdownload.cse.ucsc.edu/admin/exe/)\r\n* [lastz] (http://www.bx.psu.edu/~rsharris/lastz/)\r\n\r\nYou must have all three software downloaded and available in your PATH.  If you cannot add them to your path, you can specify the path by using the flags --bedtools_path, --liftover_path, and --lastz_path.  \r\n\r\n### Step 2: Configure annotations\r\nWe need several annotation files in order to filter for lncRNAs and discover orthologs.  For your convenience, we have provided a folder of the necessary annotations.  \r\n\r\nWhat are the annotations slncky uses and why?\r\n* The repeat content of every transcript is calculated using the REPEAT_MASKER file and transcripts with more than --repeat_min (default = 97%) repeat content are filtered out.  Only 1 may be specified.\r\n\r\n* Any transcripts that overlap a CODING or MAPPED_CODING gene are filtered according to --min_sense_overlap (default = 0%) and --min_antisense_overlap (default = 30%) parameters.  Any number CODING or MAPPED_CODING files may be specified.\r\n\r\n* If an ORTHOLOG and LIFTOVER file is specified, the remaining transcripts are liftOver-ed to the ortholog genome and aligned to coding genes in the syntenic genomic region.  Any transcript that aligns to a syntenic coding gene at more than --coding_blast_min (default = 10%) is removed. For this step to work, you must also specify at least one CODING annotation for the ORTHOLOG genome and GENOME_FA files for both species.  GENOME_FA and LIFTOVER files can be downloaded from [UCSC] (http://hgdownload.soe.ucsc.edu/downloads.html).\r\n\r\n* Next, the remaining transcripts are blat-ed against each other using the GENOME_FA file to search for clusters of gene duplications.  Any transcript that blats to another at more than --selfblast_identity_min (default = 50%) is removed.\r\n\r\n* Finally, we have a set of bona-fide long non-coding genes and slncky searches for their NONCODING orthologs in the ORTHOLOG genome. Any number of NONCODING transcripts may be specified and slncky will report all possible ortholog pairs according to --noncoding_blast_min (default = 0%) parameter. As of now, slncky only handles pair-wise ortholog searches.  \r\n\r\nIf you would like to use your own annotation files, you must specify the path in the annotations.config file.  Make sure all annotations are preceded by a line specifying which species they belong to (e.g. >mm9). Prepending a '#' to any line comments out that annotation.  For example, we have commented out annotations for UCSC's \"near coding\" genes, but if you wish to have a stricter lncRNA filter, you may delete the '#' to un-comment out this line. \r\n\r\n\r\n### Step 3: Run slncky!\r\nPhew the hard part is over.  Now you just have to run slncky.  By default slncky runs both the filtering and ortholog searching step, but you can customize that with either the --no_filter or --no_orth_search flag.  You can also run slncky in multiprocessing mode by setting the --thread (default = 1) flag.  We suggest setting --thread 5 for optimal performance.\r\n\r\nUsage:\r\n./slncky.v1.0 bedfile assembly out_prefix\r\n\r\nExamples:\r\n\r\nbarebones:\r\n\r\n`./slncky.v1.0 --thread 5 transcripts.bed mm9 transcripts.filtered`\r\n\r\ndon't filter, just search for orthologs:\r\n\r\n`./slncky.v1.0 --no_filter --thread 5 transcripts.bed mm9 transcripts.filtered`\r\n\r\nby default, slncky uses the annotations.config file in the same directory as itself, but you can set this path if you want:\r\n\r\n`./slncky.v1.0 --config ./annotations.config --thread 5 transcripts.bed mm9 transcripts.filtered`\r\n\r\nif bedtools is not in your path:\r\n\r\n`./slncky.v1.0 --bedtools_path /unix/home/jjenny/bedtools-2.17.0/bin --thread 5 transcripts.bed mm9 transcripts.filtered`\r\n\r\n\r\n### Output\r\nslncky will produce several output files.\r\n\r\n\r\n### Support or Contact\r\ncontact: jjenny@mit.edu","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}